%dev.quarkus.http.port=8081
%prod.quarkus.http.port=8080
quarkus.smallrye-openapi.path=/q/openapi

%dev.mp.messaging.connector.smallrye-kafka.bootstrap.servers=localhost:9092
%prod.mp.messaging.connector.smallrye-kafka.bootstrap.servers=PLAINTEXT://kafka:9092
quarkus.kafka.devservices.enabled=false

# %prod.quarkus.rest-client.isbn.url=http://isbn-service
%prod.quarkus.rest-client.cat.url=http://catalog-service
%prod.quarkus.rest-client.inv.url=http://inventory-service
%prod.quarkus.rest-client.ord.url=http://order-service
%prod.quarkus.rest-client.pay.url=http://payment-service
%prod.quarkus.rest-client.usr.url=http://user-service
quarkus.rest-client.connect-timeout=1000
quarkus.rest-client.read-timeout=3000

# %dev.quarkus.rest-client.isbn.url=http://localhost:8082
%dev.quarkus.rest-client.cat.url=http://localhost:8083
%dev.quarkus.rest-client.inv.url=http://localhost:8084
%dev.quarkus.rest-client.ord.url=http://localhost:8085
%dev.quarkus.rest-client.pay.url=http://localhost:8086
%dev.quarkus.rest-client.usr.url=http://localhost:8087

# Chiave pubblica per la validazione del token. Deve corrispondere a quella generata per user-service.
mp.jwt.verify.publickey.location=classpath:/publicKey.pem
# Issuer atteso nel token. Deve essere lo stesso che user-service usa per firmare.
mp.jwt.verify.issuer=bookshop-user-service

quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:5173,https://bookshop-frontend-antonio-dimarino-dev.apps.rm3.7wse.p1.openshiftapps.com
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type