# === HTTP ===
# in locale
%dev.quarkus.http.port=8082
# in OpenShift
%prod.quarkus.http.port=8080

quarkus.smallrye-openapi.path=/q/openapi

# DB (prod via env)
quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=bookshop
%dev.quarkus.datasource.password=bookshop
%dev.quarkus.hibernate-orm.database.generation=update
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/bookshop
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://{DB_HOST}:${DB_PORT}/${DB_NAME}
%prod.quarkus.datasource.username=${DB_USERNAME}
%prod.quarkus.datasource.password=${DB_PASSWORD}
%prod.quarkus.hibernate-orm.database.generation=update

# Test: H2 in-mem
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:isbn;DB_CLOSE_DELAY=-1;MODE=PostgreSQL
%test.quarkus.hibernate-orm.database.generation=drop-and-create

# Mapping Secret -> ENV
%prod.quarkus.openshift.env.mapping.DB_USERNAME.from-secret=postgresql
%prod.quarkus.openshift.env.mapping.DB_USERNAME.with-key=database-user
%prod.quarkus.openshift.env.mapping.DB_PASSWORD.from-secret=postgresql
%prod.quarkus.openshift.env.mapping.DB_PASSWORD.with-key=database-password
%prod.quarkus.openshift.env.mapping.DB_NAME.from-secret=postgresql
%prod.quarkus.openshift.env.mapping.DB_NAME.with-key=database-name
%prod.quarkus.openshift.env.vars.DB_HOST=postgresql
%prod.quarkus.openshift.env.vars.DB_PORT=5432